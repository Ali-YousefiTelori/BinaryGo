<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JsonGo</name>
    </assembly>
    <members>
        <member name="T:JsonGo.Deserialize.Deserializer">
            <summary>
            deserializer of json
            </summary>
        </member>
        <member name="P:JsonGo.Deserialize.Deserializer.DeSerializedObjects">
            <summary>
            save deserialized objects for referenced type
            </summary>
        </member>
        <member name="P:JsonGo.Deserialize.Deserializer.CacheNameVariables">
            <summary>
            cache variable to access faster, methods,fields and properties
            </summary>
        </member>
        <member name="P:JsonGo.Deserialize.Deserializer.SingleIntance">
            <summary>
            single instance of deserialize to access faster
            </summary>
        </member>
        <member name="P:JsonGo.Deserialize.Deserializer.Setting">
            <summary>
            default setting of serializer
            </summary>
        </member>
        <member name="M:JsonGo.Deserialize.Deserializer.Deserialize``1(System.String)">
            <summary>
            deserialize a json to a type
            </summary>
            <typeparam name="T">type of deserialize</typeparam>
            <param name="json">json to deserialize</param>
            <returns>deserialized type</returns>
        </member>
        <member name="M:JsonGo.Deserialize.Deserializer.Deserialize(System.String,System.Type)">
            <summary>
            deserialize a json to a type
            </summary>
            <param name="type">type of deserialize</param>
            <param name="json">json to deserialize</param>
            <returns>deserialized type</returns>
        </member>
        <member name="M:JsonGo.Deserialize.Deserializer.Extract(System.String@,System.Int32@)">
            <summary>
            deserialize json
            </summary>
            <param name="json">json value</param>
            <param name="indexOf">index of start string</param>
            <returns>value deserialized</returns>
        </member>
        <member name="M:JsonGo.Deserialize.Deserializer.ExtractOject(System.String@,System.Int32@)">
            <summary>
            extract list of properties from object
            </summary>
            <param name="json"></param>
            <param name="indexOf"></param>
            <returns></returns>
        </member>
        <member name="M:JsonGo.Deserialize.Deserializer.GetKeyType(System.Object,System.String)">
            <summary>
            get type of a json parameter name
            </summary>
            <param name="obj">object</param>
            <param name="key">json parameter name</param>
            <returns>type of json parameter</returns>
        </member>
        <member name="M:JsonGo.Deserialize.Deserializer.ExtractString(System.String@,System.Int32@)">
            <summary>
            extract string from inside of double " char
            </summary>
            <param name="json"></param>
            <param name="indexOf"></param>
            <returns></returns>
        </member>
        <member name="M:JsonGo.Deserialize.Deserializer.SetValue(System.Object,System.Object,System.String)">
            <summary>
            set value of json parameter key to an instance of object
            </summary>
            <param name="obj">object to change parameter</param>
            <param name="value">value to set</param>
            <param name="key">parameter name of object</param>
        </member>
        <member name="M:JsonGo.Deserialize.Deserializer.IsWhiteSpace(System.Char@)">
            <summary>
            check if a character is whitespace or empty
            </summary>
            <param name="value">character to check</param>
            <returns>is char is white space</returns>
        </member>
        <member name="T:JsonGo.Deserialize.IJsonGoModel">
            <summary>
            json go model before deserialize
            </summary>
        </member>
        <member name="M:JsonGo.Deserialize.IJsonGoModel.Generate(System.Type,JsonGo.Deserialize.Deserializer)">
            <summary>
            generate type to object
            </summary>
            <param name="type"></param>
            <param name="deserializer"></param>
            <returns></returns>
        </member>
        <member name="M:JsonGo.Deserialize.IJsonGoModel.Add(System.String,JsonGo.Deserialize.IJsonGoModel)">
            <summary>
            add property,item,value to model
            </summary>
            <param name="nameOrValue"></param>
            <param name="value"></param>
        </member>
        <member name="T:JsonGo.JsonSettingInfo">
            <summary>
            default setting of json serialize and deserialier
            </summary>
        </member>
        <member name="F:JsonGo.JsonSettingInfo.IdRefrencedTypeName">
            <summary>
            $Id refrenced type name
            </summary>
        </member>
        <member name="F:JsonGo.JsonSettingInfo.RefRefrencedTypeName">
            <summary>
            $Ref refrenced type name
            </summary>
        </member>
        <member name="F:JsonGo.JsonSettingInfo.ValuesRefrencedTypeName">
            <summary>
            $Values refrenced type name
            </summary>
        </member>
        <member name="P:JsonGo.JsonSettingInfo.HasGenerateRefrencedTypes">
            <summary>
            support for $id,$ref,$values for serialization
            </summary>
        </member>
        <member name="T:JsonGo.Runtime.PropertyGoInfo">
            <summary>
            generate type details on memory
            </summary>
        </member>
        <member name="P:JsonGo.Runtime.PropertyGoInfo.Type">
            <summary>
            type of property
            </summary>
        </member>
        <member name="P:JsonGo.Runtime.PropertyGoInfo.Name">
            <summary>
            name of property
            </summary>
        </member>
        <member name="P:JsonGo.Runtime.PropertyGoInfo.GetValue">
            <summary>
            get value of property
            </summary>
        </member>
        <member name="T:JsonGo.Runtime.TypeGoInfo">
            <summary>
            generate type details on memory
            </summary>
        </member>
        <member name="F:JsonGo.Runtime.TypeGoInfo.Types">
            <summary>
            chached types
            </summary>
        </member>
        <member name="P:JsonGo.Runtime.TypeGoInfo.Type">
            <summary>
            type of data
            </summary>
        </member>
        <member name="P:JsonGo.Runtime.TypeGoInfo.IsSimpleType">
            <summary>
            is simple type like int,string,double,enum etc
            </summary>
        </member>
        <member name="P:JsonGo.Runtime.TypeGoInfo.Serialize">
            <summary>
            serialize action
            </summary>
        </member>
        <member name="P:JsonGo.Runtime.TypeGoInfo.Properties">
            <summary>
            properties of type
            </summary>
        </member>
        <member name="M:JsonGo.Runtime.TypeGoInfo.Generate(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="data"></param>
            <param name="refrencedId"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="T:JsonGo.Serializer">
            <summary>
            serialize json to an object
            </summary>
        </member>
        <member name="P:JsonGo.Serializer.SerializedObjects">
            <summary>
            save serialized objects to skip stackoverflow exception and for referenced type
            </summary>
        </member>
        <member name="P:JsonGo.Serializer.Setting">
            <summary>
            default setting of serializer
            </summary>
        </member>
        <member name="P:JsonGo.Serializer.ReferencedIndex">
            <summary>
            start of referenced index
            </summary>
        </member>
        <member name="P:JsonGo.Serializer.SingleIntance">
            <summary>
            single instance of serializer to accesss faster
            </summary>
        </member>
        <member name="P:JsonGo.Serializer.Builder">
            <summary>
            string builder of json serialization
            </summary>
        </member>
        <member name="M:JsonGo.Serializer.Serialize(System.Object)">
            <summary>
            serialize an object to a json string
            </summary>
            <param name="data">any object to serialize</param>
            <returns>json that serialized from you object</returns>
        </member>
        <member name="M:JsonGo.Serializer.SerializeObject(System.Text.StringBuilder,System.Object,JsonGo.Serializer)">
            <summary>
            serialize an object to a json string
            </summary>
            <param name="data">any object to serialize</param>
            <param name="serializer"></param>
            <returns>json that serialized from you object</returns>
        </member>
    </members>
</doc>
